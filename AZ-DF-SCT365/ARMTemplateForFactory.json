{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "AZ-DF-SCT365"
		},
		"LS_AzDwh_Connection_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LS_AzDwh_Connection'"
		},
		"LS_Blob_Connection_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LS_Blob_Connection'"
		},
		"LS_Dl_Connection_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'LS_Dl_Connection'"
		},
		"LS_Dl_Connection_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://sct365dev.dfs.core.windows.net/"
		},
		"LS_Sp_Connection_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://lucasmonroecouk.sharepoint.com"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Get_Data_From_Sharepoint')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Bearer Token",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://accounts.accesscontrol.windows.net/5b703e6a-eac8-44b7-9c04-356bd60d435d/tokens/OAuth/2",
							"method": "POST",
							"headers": {
								"Content-Type": "application/x-www-form-urlencoded"
							},
							"body": "grant_type=client_credentials&client_id=23cc7221-b128-4970-b24c-5e5d703676f5@5b703e6a-eac8-44b7-9c04-356bd60d435d&client_secret=eBe8Q~bj1u5QEMlmGqLCB3S1iVPFvfUASR4fUceh&resource=00000003-0000-0ff1-ce00-000000000000/lucasmonroecouk.sharepoint.com@5b703e6a-eac8-44b7-9c04-356bd60d435d\n"
						}
					},
					{
						"name": "Copy data",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Get Bearer Token",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "/sites/SCT/_api/web/GetFileByServerRelativeUrl('/sites/SCT/Data_Warehouse/PBI_Test/User1/Project1/A.csv')/$value"
							},
							{
								"name": "Destination",
								"value": "sct-container-dev/data/Sample.csv"
							}
						],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET",
									"additionalHeaders": {
										"value": "@{concat('Authorization: Bearer ', activity('Get Bearer Token').output.access_token)}",
										"type": "Expression"
									},
									"requestTimeout": ""
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_SP_Source",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_BLOB_Staging",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_SP_Source')]",
				"[concat(variables('factoryId'), '/datasets/DS_BLOB_Staging')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_BLOB_Staging')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_Blob_Connection",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Sample.csv",
						"folderPath": "data",
						"container": "sct-container-dev"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_Blob_Connection')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_DL_Staging')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_Dl_Connection",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "Sample.csv",
						"folderPath": "Data",
						"fileSystem": "sct-container-dev"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_Dl_Connection')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_DWH_Destination')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzDwh_Connection",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "RAW",
					"table": "Orders"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AzDwh_Connection')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_SP_Source')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_Sp_Connection",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation",
						"relativeUrl": "/sites/SCT/_api/web/GetFileByServerRelativeUrl('/sites/SCT/Data_Warehouse/PBI_Test/User1/Project1/A.csv')/$value"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_Sp_Connection')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_AzDwh_Connection')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('LS_AzDwh_Connection_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_Blob_Connection')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('LS_Blob_Connection_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_Dl_Connection')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('LS_Dl_Connection_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('LS_Dl_Connection_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_Sp_Connection')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('LS_Sp_Connection_properties_typeProperties_url')]",
					"enableServerCertificateValidation": false,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_BLOB_CSV",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_DWH_Destination",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "MapDrifted1",
							"description": "Creates an explicit mapping for each drifted column"
						},
						{
							"name": "select1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          {Activity ID} as string,",
						"          {Activity Status} as string,",
						"          {Activity Name} as string,",
						"          Critical as boolean,",
						"          {Project ID} as string,",
						"          {Project Name} as string,",
						"          {WBS Name} as string,",
						"          Predecessors as string,",
						"          Successors as string,",
						"          {Predecessor Details} as string,",
						"          {BL Project Actual Start} as string,",
						"          {BL Project Actual Finish} as string,",
						"          {BL Project Late Finish} as string,",
						"          {BL Project Late Start} as string,",
						"          {BL Project Early Start} as string,",
						"          {BL Project Early Finish} as string,",
						"          {Successor Details} as string,",
						"          {Remaining Float} as short,",
						"          {Float Path} as short,",
						"          {Float Path Order} as short,",
						"          {Activity Type} as string,",
						"          {Primary Constraint} as string,",
						"          {Project Status} as string,",
						"          {Secondary Constraint} as string,",
						"          {Longest Path} as boolean,",
						"          {Duration Type} as string,",
						"          {Activity Count} as boolean,",
						"          {Actual Completed Activities} as boolean,",
						"          {Actual In-Progress Activities} as boolean,",
						"          {Actual Not-Started Activities} as boolean,",
						"          {BL Project Completed Activities} as boolean,",
						"          {BL Project In-Progress Activities} as boolean,",
						"          {BL Project Not-Started Activities} as boolean,",
						"          {Activity Resource Assignment Count} as boolean,",
						"          {Percent Complete Type} as string,",
						"          {Activity % Complete} as string,",
						"          {Units % Complete} as string,",
						"          {Duration % Complete} as string,",
						"          {Duration % of Original} as string,",
						"          {Resource IDs} as string,",
						"          Resources as string,",
						"          {Free Float} as short,",
						"          {Variance - BL Project Duration} as short,",
						"          {BL Project Duration} as short,",
						"          Finish as string,",
						"          Start as string,",
						"          {Actual Start} as string,",
						"          {Actual Finish} as string,",
						"          {BL Project Start} as string,",
						"          {BL Project Finish} as string,",
						"          {Early Start} as string,",
						"          {Early Finish} as string,",
						"          {Late Start} as string,",
						"          {Late Finish} as string,",
						"          {Actual Duration} as short,",
						"          {Original Duration} as short,",
						"          {Remaining Duration} as short,",
						"          {At Completion Duration} as short,",
						"          {Total Float} as short,",
						"          {BL Project Total Float} as string,",
						"          {Variance - BL Project Finish Date} as short,",
						"          {Variance - BL Project Start Date} as short,",
						"          {Budgeted Total Cost} as boolean,",
						"          {Budgeted Labor Units} as integer,",
						"          {Budgeted Nonlabor Units} as boolean,",
						"          {Budget At Completion} as string,",
						"          {Budget At Completion (BAC) - Labor Units} as integer,",
						"          {Actual Cost} as boolean,",
						"          {Planned Value Cost} as boolean,",
						"          {Planned Value Labor Units} as boolean,",
						"          {Earned Value Cost} as boolean,",
						"          {Earned Value Labor Units} as boolean,",
						"          {Actual Labor Units} as boolean,",
						"          {Remaining Early Finish} as string,",
						"          {Remaining Early Start} as string,",
						"          {Remaining Late Finish} as string,",
						"          {Remaining Late Start} as string,",
						"          {Suspend Date} as string,",
						"          {Primary Constraint Date} as string,",
						"          {Secondary Constraint Date} as string,",
						"          {Expected Finish} as string,",
						"          Calendar as string,",
						"          {Last Modified Date} as string,",
						"          {Last Modified By} as string,",
						"          {SZGMC Date Changes} as string,",
						"          {SZGMC- Access & Dust Free Key dates} as string,",
						"          {SZGMC- Clent Comments} as string,",
						"          {SZGMC- Clent Key dates} as string,",
						"          {SZGMC- Milestones} as string,",
						"          {SZGMC- Scope Areas} as string,",
						"          {SZGMC-Mitigation Changes} as string,",
						"          {SZGMC-Package Managers} as string,",
						"          {SZGMC-Packages} as string,",
						"          {SZGMC-Project Stages} as string,",
						"          {SZGMC-Stage} as string,",
						"          {SZGMC-Trades} as string,",
						"          {SZGMC-Work Breakdown} as string,",
						"          dsadsad as string,",
						"          asdasdasdasdads as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     skipLines: 1) ~> source1",
						"source1 derive({Activity ID} = toString(byName('Activity ID')),",
						"          {Activity Status} = toString(byName('Activity Status')),",
						"          {Activity Name} = toString(byName('Activity Name')),",
						"          Critical = toString(byName('Critical')),",
						"          {Project ID} = toString(byName('Project ID')),",
						"          {Project Name} = toString(byName('Project Name')),",
						"          {WBS Name} = toString(byName('WBS Name')),",
						"          Predecessors = toString(byName('Predecessors')),",
						"          Successors = toString(byName('Successors')),",
						"          {Predecessor Details} = toString(byName('Predecessor Details')),",
						"          {BL Project Actual Start} = toString(byName('BL Project Actual Start')),",
						"          {BL Project Actual Finish} = toString(byName('BL Project Actual Finish')),",
						"          {BL Project Late Finish} = toString(byName('BL Project Late Finish')),",
						"          {BL Project Late Start} = toString(byName('BL Project Late Start')),",
						"          {BL Project Early Start} = toString(byName('BL Project Early Start')),",
						"          {BL Project Early Finish} = toString(byName('BL Project Early Finish')),",
						"          {Successor Details} = toString(byName('Successor Details')),",
						"          {Remaining Float} = toString(byName('Remaining Float')),",
						"          {Float Path} = toString(byName('Float Path')),",
						"          {Float Path Order} = toString(byName('Float Path Order')),",
						"          {Activity Type} = toString(byName('Activity Type')),",
						"          {Primary Constraint} = toString(byName('Primary Constraint')),",
						"          {Project Status} = toString(byName('Project Status')),",
						"          {Secondary Constraint} = toString(byName('Secondary Constraint')),",
						"          {Longest Path} = toString(byName('Longest Path')),",
						"          {Duration Type} = toString(byName('Duration Type')),",
						"          {Activity Count} = toString(byName('Activity Count')),",
						"          {Actual Completed Activities} = toString(byName('Actual Completed Activities')),",
						"          {Actual In-Progress Activities} = toString(byName('Actual In-Progress Activities')),",
						"          {Actual Not-Started Activities} = toString(byName('Actual Not-Started Activities')),",
						"          {BL Project Completed Activities} = toString(byName('BL Project Completed Activities')),",
						"          {BL Project In-Progress Activities} = toString(byName('BL Project In-Progress Activities')),",
						"          {BL Project Not-Started Activities} = toString(byName('BL Project Not-Started Activities')),",
						"          {Activity Resource Assignment Count} = toString(byName('Activity Resource Assignment Count')),",
						"          {Percent Complete Type} = toString(byName('Percent Complete Type')),",
						"          {Activity % Complete} = toString(byName('Activity % Complete')),",
						"          {Units % Complete} = toString(byName('Units % Complete')),",
						"          {Duration % Complete} = toString(byName('Duration % Complete')),",
						"          {Duration % of Original} = toString(byName('Duration % of Original')),",
						"          {Resource IDs} = toString(byName('Resource IDs')),",
						"          Resources = toString(byName('Resources')),",
						"          {Free Float} = toString(byName('Free Float')),",
						"          {Variance - BL Project Duration} = toString(byName('Variance - BL Project Duration')),",
						"          {BL Project Duration} = toString(byName('BL Project Duration')),",
						"          Finish = toString(byName('Finish')),",
						"          Start = toString(byName('Start')),",
						"          {Actual Start} = toString(byName('Actual Start')),",
						"          {Actual Finish} = toString(byName('Actual Finish')),",
						"          {BL Project Start} = toString(byName('BL Project Start')),",
						"          {BL Project Finish} = toString(byName('BL Project Finish')),",
						"          {Early Start} = toString(byName('Early Start')),",
						"          {Early Finish} = toString(byName('Early Finish')),",
						"          {Late Start} = toString(byName('Late Start')),",
						"          {Late Finish} = toString(byName('Late Finish')),",
						"          {Actual Duration} = toString(byName('Actual Duration')),",
						"          {Original Duration} = toString(byName('Original Duration')),",
						"          {Remaining Duration} = toString(byName('Remaining Duration')),",
						"          {At Completion Duration} = toString(byName('At Completion Duration')),",
						"          {Total Float} = toString(byName('Total Float')),",
						"          {BL Project Total Float} = toString(byName('BL Project Total Float')),",
						"          {Variance - BL Project Finish Date} = toString(byName('Variance - BL Project Finish Date')),",
						"          {Variance - BL Project Start Date} = toString(byName('Variance - BL Project Start Date')),",
						"          {Budgeted Total Cost} = toString(byName('Budgeted Total Cost')),",
						"          {Budgeted Labor Units} = toString(byName('Budgeted Labor Units')),",
						"          {Budgeted Nonlabor Units} = toString(byName('Budgeted Nonlabor Units')),",
						"          {Budget At Completion} = toString(byName('Budget At Completion')),",
						"          {Budget At Completion (BAC) - Labor Units} = toString(byName('Budget At Completion (BAC) - Labor Units')),",
						"          {Actual Cost} = toString(byName('Actual Cost')),",
						"          {Planned Value Cost} = toString(byName('Planned Value Cost')),",
						"          {Planned Value Labor Units} = toString(byName('Planned Value Labor Units')),",
						"          {Earned Value Cost} = toString(byName('Earned Value Cost')),",
						"          {Earned Value Labor Units} = toString(byName('Earned Value Labor Units')),",
						"          {Actual Labor Units} = toString(byName('Actual Labor Units')),",
						"          {Remaining Early Finish} = toString(byName('Remaining Early Finish')),",
						"          {Remaining Early Start} = toString(byName('Remaining Early Start')),",
						"          {Remaining Late Finish} = toString(byName('Remaining Late Finish')),",
						"          {Remaining Late Start} = toString(byName('Remaining Late Start')),",
						"          {Suspend Date} = toString(byName('Suspend Date')),",
						"          {Primary Constraint Date} = toString(byName('Primary Constraint Date')),",
						"          {Secondary Constraint Date} = toString(byName('Secondary Constraint Date')),",
						"          {Expected Finish} = toString(byName('Expected Finish')),",
						"          Calendar = toString(byName('Calendar')),",
						"          {Last Modified Date} = toString(byName('Last Modified Date')),",
						"          {Last Modified By} = toString(byName('Last Modified By')),",
						"          {SZGMC Date Changes} = toString(byName('SZGMC Date Changes')),",
						"          {SZGMC- Access & Dust Free Key dates} = toString(byName('SZGMC- Access & Dust Free Key dates')),",
						"          {SZGMC- Clent Comments} = toString(byName('SZGMC- Clent Comments')),",
						"          {SZGMC- Clent Key dates} = toString(byName('SZGMC- Clent Key dates')),",
						"          {SZGMC- Milestones} = toString(byName('SZGMC- Milestones')),",
						"          {SZGMC- Scope Areas} = toString(byName('SZGMC- Scope Areas')),",
						"          {SZGMC-Mitigation Changes} = toString(byName('SZGMC-Mitigation Changes')),",
						"          {SZGMC-Package Managers} = toString(byName('SZGMC-Package Managers')),",
						"          {SZGMC-Packages} = toString(byName('SZGMC-Packages')),",
						"          {SZGMC-Project Stages} = toString(byName('SZGMC-Project Stages')),",
						"          {SZGMC-Stage} = toString(byName('SZGMC-Stage')),",
						"          {SZGMC-Trades} = toString(byName('SZGMC-Trades')),",
						"          {SZGMC-Work Breakdown} = toString(byName('SZGMC-Work Breakdown')),",
						"          dsadsad = toString(byName('dsadsad')),",
						"          asdasdasdasdads = toString(byName('asdasdasdasdads'))) ~> MapDrifted1",
						"MapDrifted1 select(skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"select1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     stagingSchemaName: 'RAW',",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     recreate:true,",
						"     format: 'table',",
						"     dateFormat:'dd/MM/yyyy',",
						"     timestampFormat:'MM/dd/yyyy HH:mm:ss',",
						"     booleanFormat: ['true', 'false'],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_BLOB_CSV')]",
				"[concat(variables('factoryId'), '/datasets/DS_DWH_Destination')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Exec_DF')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "dataflow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow1",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dataflow1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_BLOB_CSV')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_Blob_Connection",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Sample.csv",
						"folderPath": "data",
						"container": "sct-container-dev"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_Blob_Connection')]"
			]
		}
	]
}