{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DS_BLOB_CSV",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DS_DWH_Destination",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "MapDrifted1",
					"description": "Creates an explicit mapping for each drifted column"
				}
			],
			"scriptLines": [
				"source(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     skipLines: 1) ~> source1",
				"source1 derive({Activity ID} = toString(byName('Activity ID')),",
				"          {Activity Status} = toString(byName('Activity Status')),",
				"          {Activity Name} = toString(byName('Activity Name')),",
				"          Critical = toString(byName('Critical')),",
				"          {Project ID} = toString(byName('Project ID')),",
				"          {Project Name} = toString(byName('Project Name')),",
				"          {WBS Name} = toString(byName('WBS Name')),",
				"          Predecessors = toString(byName('Predecessors')),",
				"          Successors = toString(byName('Successors')),",
				"          {Predecessor Details} = toString(byName('Predecessor Details')),",
				"          {BL Project Actual Start} = toString(byName('BL Project Actual Start')),",
				"          {BL Project Actual Finish} = toString(byName('BL Project Actual Finish')),",
				"          {BL Project Late Finish} = toString(byName('BL Project Late Finish')),",
				"          {BL Project Late Start} = toString(byName('BL Project Late Start')),",
				"          {BL Project Early Start} = toString(byName('BL Project Early Start')),",
				"          {BL Project Early Finish} = toString(byName('BL Project Early Finish')),",
				"          {Successor Details} = toString(byName('Successor Details')),",
				"          {Remaining Float} = toString(byName('Remaining Float')),",
				"          {Float Path} = toString(byName('Float Path')),",
				"          {Float Path Order} = toString(byName('Float Path Order')),",
				"          {Activity Type} = toString(byName('Activity Type')),",
				"          {Primary Constraint} = toString(byName('Primary Constraint')),",
				"          {Project Status} = toString(byName('Project Status')),",
				"          {Secondary Constraint} = toString(byName('Secondary Constraint')),",
				"          {Longest Path} = toString(byName('Longest Path')),",
				"          {Duration Type} = toString(byName('Duration Type')),",
				"          {Activity Count} = toString(byName('Activity Count')),",
				"          {Actual Completed Activities} = toString(byName('Actual Completed Activities')),",
				"          {Actual In-Progress Activities} = toString(byName('Actual In-Progress Activities')),",
				"          {Actual Not-Started Activities} = toString(byName('Actual Not-Started Activities')),",
				"          {BL Project Completed Activities} = toString(byName('BL Project Completed Activities')),",
				"          {BL Project In-Progress Activities} = toString(byName('BL Project In-Progress Activities')),",
				"          {BL Project Not-Started Activities} = toString(byName('BL Project Not-Started Activities')),",
				"          {Activity Resource Assignment Count} = toString(byName('Activity Resource Assignment Count')),",
				"          {Percent Complete Type} = toString(byName('Percent Complete Type')),",
				"          {Activity % Complete} = toString(byName('Activity % Complete')),",
				"          {Units % Complete} = toString(byName('Units % Complete')),",
				"          {Duration % Complete} = toString(byName('Duration % Complete')),",
				"          {Duration % of Original} = toString(byName('Duration % of Original')),",
				"          {Resource IDs} = toString(byName('Resource IDs')),",
				"          Resources = toString(byName('Resources')),",
				"          {Free Float} = toString(byName('Free Float')),",
				"          {Variance - BL Project Duration} = toString(byName('Variance - BL Project Duration')),",
				"          {BL Project Duration} = toString(byName('BL Project Duration')),",
				"          Finish = toString(byName('Finish')),",
				"          Start = toString(byName('Start')),",
				"          {Actual Start} = toString(byName('Actual Start')),",
				"          {Actual Finish} = toString(byName('Actual Finish')),",
				"          {BL Project Start} = toString(byName('BL Project Start')),",
				"          {BL Project Finish} = toString(byName('BL Project Finish')),",
				"          {Early Start} = toString(byName('Early Start')),",
				"          {Early Finish} = toString(byName('Early Finish')),",
				"          {Late Start} = toString(byName('Late Start')),",
				"          {Late Finish} = toString(byName('Late Finish')),",
				"          {Actual Duration} = toString(byName('Actual Duration')),",
				"          {Original Duration} = toString(byName('Original Duration')),",
				"          {Remaining Duration} = toString(byName('Remaining Duration')),",
				"          {At Completion Duration} = toString(byName('At Completion Duration')),",
				"          {Total Float} = toString(byName('Total Float')),",
				"          {BL Project Total Float} = toString(byName('BL Project Total Float')),",
				"          {Variance - BL Project Finish Date} = toString(byName('Variance - BL Project Finish Date')),",
				"          {Variance - BL Project Start Date} = toString(byName('Variance - BL Project Start Date')),",
				"          {Budgeted Total Cost} = toString(byName('Budgeted Total Cost')),",
				"          {Budgeted Labor Units} = toString(byName('Budgeted Labor Units')),",
				"          {Budgeted Nonlabor Units} = toString(byName('Budgeted Nonlabor Units')),",
				"          {Budget At Completion} = toString(byName('Budget At Completion')),",
				"          {Budget At Completion (BAC) - Labor Units} = toString(byName('Budget At Completion (BAC) - Labor Units')),",
				"          {Actual Cost} = toString(byName('Actual Cost')),",
				"          {Planned Value Cost} = toString(byName('Planned Value Cost')),",
				"          {Planned Value Labor Units} = toString(byName('Planned Value Labor Units')),",
				"          {Earned Value Cost} = toString(byName('Earned Value Cost')),",
				"          {Earned Value Labor Units} = toString(byName('Earned Value Labor Units')),",
				"          {Actual Labor Units} = toString(byName('Actual Labor Units')),",
				"          {Remaining Early Finish} = toString(byName('Remaining Early Finish')),",
				"          {Remaining Early Start} = toString(byName('Remaining Early Start')),",
				"          {Remaining Late Finish} = toString(byName('Remaining Late Finish')),",
				"          {Remaining Late Start} = toString(byName('Remaining Late Start')),",
				"          {Suspend Date} = toString(byName('Suspend Date')),",
				"          {Primary Constraint Date} = toString(byName('Primary Constraint Date')),",
				"          {Secondary Constraint Date} = toString(byName('Secondary Constraint Date')),",
				"          {Expected Finish} = toString(byName('Expected Finish')),",
				"          Calendar = toString(byName('Calendar')),",
				"          {Last Modified Date} = toString(byName('Last Modified Date')),",
				"          {Last Modified By} = toString(byName('Last Modified By')),",
				"          {SZGMC Date Changes} = toString(byName('SZGMC Date Changes')),",
				"          {SZGMC- Access & Dust Free Key dates} = toString(byName('SZGMC- Access & Dust Free Key dates')),",
				"          {SZGMC- Clent Comments} = toString(byName('SZGMC- Clent Comments')),",
				"          {SZGMC- Clent Key dates} = toString(byName('SZGMC- Clent Key dates')),",
				"          {SZGMC- Milestones} = toString(byName('SZGMC- Milestones')),",
				"          {SZGMC- Scope Areas} = toString(byName('SZGMC- Scope Areas')),",
				"          {SZGMC-Mitigation Changes} = toString(byName('SZGMC-Mitigation Changes')),",
				"          {SZGMC-Package Managers} = toString(byName('SZGMC-Package Managers')),",
				"          {SZGMC-Packages} = toString(byName('SZGMC-Packages')),",
				"          {SZGMC-Project Stages} = toString(byName('SZGMC-Project Stages')),",
				"          {SZGMC-Stage} = toString(byName('SZGMC-Stage')),",
				"          {SZGMC-Trades} = toString(byName('SZGMC-Trades')),",
				"          {SZGMC-Work Breakdown} = toString(byName('SZGMC-Work Breakdown')),",
				"          dsadsad = toString(byName('dsadsad')),",
				"          asdasdasdasdads = toString(byName('asdasdasdasdads'))) ~> MapDrifted1",
				"MapDrifted1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     recreate:true,",
				"     format: 'table',",
				"     dateFormat:'dd/MM/yyyy',",
				"     timestampFormat:'MM/dd/yyyy HH:mm:ss',",
				"     booleanFormat: ['true', 'false'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> sink1"
			]
		}
	}
}